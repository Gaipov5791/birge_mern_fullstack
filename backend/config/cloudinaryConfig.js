import { v2 as cloudinary } from 'cloudinary';
import multer from 'multer';
import dotenv from 'dotenv';

dotenv.config(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Cloudinary
cloudinary.config({
    cloud_name: process.env.CLOUDINARY_CLOUD_NAME,
    api_key: process.env.CLOUDINARY_API_KEY,
    api_secret: process.env.CLOUDINARY_API_SECRET
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Multer –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤
// –ò—Å–ø–æ–ª—å–∑—É–µ–º memoryStorage, —á—Ç–æ–±—ã multer –≤—Ä–µ–º–µ–Ω–Ω–æ —Ö—Ä–∞–Ω–∏–ª —Ñ–∞–π–ª –≤ –ø–∞–º—è—Ç–∏ (req.files[i].buffer)
const storage = multer.memoryStorage(); 

// üåü –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 1: –§–∏–ª—å—Ç—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞ (–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ò –í–∏–¥–µ–æ)
const fileFilter = (req, file, cb) => {
    const isImage = file.mimetype.startsWith('image/');
    const isVideo = file.mimetype.startsWith('video/');

    if (isImage || isVideo) {
        cb(null, true);
    } else {
        // –ü–µ—Ä–µ–¥–∞—á–∞ –æ—à–∏–±–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø–æ–π–º–∞–Ω–∞ Multer'–æ–º –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
        cb(new Error('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞. –†–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –≤–∏–¥–µ–æ.'), false);
    }
};

const upload = multer({ 
    storage: storage,
    fileFilter: fileFilter,
    limits: {
        // –£–≤–µ–ª–∏—á–∏–º –ª–∏–º–∏—Ç –¥–ª—è –≤–∏–¥–µ–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–æ 50MB), –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
        fileSize: 1024 * 1024 * 50 // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞: 50MB (–ø—Ä–∏–º–µ—Ä)
    }
});

export { cloudinary, upload };